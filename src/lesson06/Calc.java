package lesson06;

@FunctionalInterface
public interface Calc {
    // final - константа. Не может быть изменена
    // значение константы определяется сразу (в поле) или в конструкторе
    public static final int CONST = 10;
    int sum(int a, int b); // public abstract int sum(int a, int b);

    default int sub(int a, int b) { // Метод с реализацией
        return a - b;
    }

    static int mul(int a, int b) { // Метод с реализацией НЕЛЬЗЯ ПЕРЕОПРЕДЕЛИТЬ ПОВЕДЕНИЕ
        return a * b;
    }
    // Интерфейс только с одним нереализованным методом называется функциональным интерфейсом
    // Маркерные интерфейсы - это интерфейсы без методов: Serializable, Cloneable, Comparable

    // Отличия абстрактного класса и интерфейса:
    // 1. Интерфейс может содержать только константы
    // 2. Абстрактный класс может содержать конструктор, а интерфейс - нет
    // 3. От абстрактного класса можно наследоваться, а от интерфейса - нет + класс может имплементировать несколько интерфейсов
}
